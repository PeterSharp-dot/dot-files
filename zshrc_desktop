# Start configuration added by Zim install {{{
#
# User configuration sourced by interactive shells
#

# -----------------
# Zsh configuration
# -----------------

#
# History
#

# Remove older command from the history if a duplicate is to be added.
setopt HIST_IGNORE_ALL_DUPS

#
# Input/output
#

# Set editor default keymap to emacs (`-e`) or vi (`-v`)
bindkey -e

# Prompt for spelling correction of commands.
#setopt CORRECT

# Customize spelling correction prompt.
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}

# -----------------
# Zim configuration
# -----------------

# Use degit instead of git as the default tool to install and update modules.
#zstyle ':zim:zmodule' use 'degit'

# --------------------
# Module configuration
# --------------------
setopt nopromptbang prompt{cr,percent,sp,subst}

zstyle ':zim:prompt-pwd' git-root yes
zstyle ':zim:prompt-pwd:fish-style' dir-length 1
zstyle ':zim:prompt-pwd:separator' format '❯'

PS1='$(prompt-pwd)❯ '
#
# git
#

# Set a custom prefix for the generated aliases. The default prefix is 'G'.
#zstyle ':zim:git' aliases-prefix 'g'

#
# input
#

# Append `../` to your input for each `.` you type after an initial `..`
#zstyle ':zim:input' double-dot-expand yes

#
# termtitle
#

# Set a custom terminal title format using prompt expansion escape sequences.
# See http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# If none is provided, the default '%n@%m: %~' is used.
#zstyle ':zim:termtitle' format '%1~'

#
# zsh-autosuggestions
#

# Disable automatic widget re-binding on each precmd. This can be set when
# zsh-users/zsh-autosuggestions is the last module in your ~/.zimrc.
ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# Customize the style that the suggestions are shown with.
# See https://github.com/zsh-users/zsh-autosuggestions/blob/master/README.md#suggestion-highlight-style
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=242'

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Customize the main highlighter styles.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md#how-to-tweak-it
#typeset -A ZSH_HIGHLIGHT_STYLES
#ZSH_HIGHLIGHT_STYLES[comment]='fg=242'

# ------------------
# Initialize modules
# ------------------

ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim
# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh

# ------------------------------
# Post-init module configuration
# ------------------------------

#
# zsh-history-substring-search
#

zmodload -F zsh/terminfo +p:terminfo
# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
for key ('k') bindkey -M vicmd ${key} history-substring-search-up
for key ('j') bindkey -M vicmd ${key} history-substring-search-down
unset key
# }}} End configuration added by Zim install

# autoload -Uz compinit promptinit
# compinit
# promptinit
zstyle ':completion:*' rehash true

autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search

export PATH=/home/peter/.local/bin:$PATH
export PATH=/home/peter/.local/lib:$PATH
export PATH=/home/peter/.cargo/bin:$PATH
export PATH=/home/peter/.emacs.d/bin:$PATH
#export PATH=/home/peter/.local/share/pypy3.10-v7.3.16-linux64/bin:$PATH
export PATH=/usr/bin/python:$PATH
export COOKIE_FILE="/home/peter/.local/bin/cookies.json"
#export TERM="xterm-256color"
export GPG_TTY=(tty)
export PASSWORD_STORE_CLIPBOARD_COMMAND="wl-copy"
export MANWIDTH=80
# export STARDICT_DATA_DIR="home/peter"
# export STARDICT_DATA_DIR=$XDG_DATA_HOME
export TERMINAL="/usr/bin/kitty"
export COLORTERM=truecolor
export SHFM_OPENER="/home/peter/.local/bin/shfm-opener.sh"
export EDITOR=nvim
export VISUAL=nvim
#export FZF_DEFAULT_COMMAND='ag --hidden --depth 4 --ignore .git -f -g ""'
#source fzf --zsh
export BAT_THEME="Solarized (light)"
# export XDG_CURRENT_DESKTOP=KDE
export QT_QPA_PLATFORMTHEME=qt5ct
export NOTES="/home/peter/notes/"
export VK_ICD_FILENAMES="/usr/share/vulkan/icd.d/radeon_icd.x86_64.json"
#set -gx MESA_GLTHREAD true
#set -gx MESA_GLSL_CACHE_DISABLE true
#set -gx MESA_EXTENSION_MAX_YEAR 2020
# source /home/peter/.local/bin/tty-zsh-colors.sh

# bind -M insert \cf accept-autosuggestion
# bind -M insert \cy accept-autosuggestion

t(){
  clear && pwd && lsd --tree --depth 1
}
ta(){
  clear && pwd && lsd -a --tree --depth 1
}
media() {
  cd /run/media/peter &&  pwd && lsd --tree --depth 1
}
pen() {
  cd /run/media/peter/D120-CF00 && lsd --tree --depth 1
}

# sd() {
#   if (($#argv == 0)); then
#     cd $HOME && cd "$(fd -H -t d | fzf --height 40% --layout reverse --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)" && clear && pwd && lsd -a --color=always
#     else
#         cd $HOME && cd "$(fd -H -t d | fzf --height 40% --layout reverse --query="$argv[1]" --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)" && clear && pwd && lsd -a --color=always
#     fi
#   }

sd() {
  if (($#argv == 0)); then
    cd $HOME && cd "$(fd -H -t d | fzf --height 40% --layout reverse --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)" && clear && pwd && lsd --tree --depth 1
    else
        cd $HOME && cd "$(fd -H -t d | fzf --height 40% --layout reverse --query="$argv[1]" --preview="tree -L 1 {}" --bind="space:toggle-preview" --preview-window=:hidden)" && clear && pwd && lsd --tree --depth 1  
    fi
  }

vif() {
    cd $HOME && nvim $(fzf)
  }
rgall(){
    clear && rga -B 5 -A 4
  }
tra() {
  clear && trans :pl $argv -show-translation-phonetics | bat -p --color always
}

#alias ls='lsd --color=always'
alias ls='ls --color=auto'
alias l1='lsd -1 --color=always'
alias la='lsd -la --color=always'
alias l='lsd --color=always'
alias ll='lsd -l --color=never'
alias chat='tgpt'
alias bing='edge-gpt --rich --style creative --cookie-file /home/peter/.local/bin/cookies.json'
alias pliki='pcmanfm'
#alias rga='rga --color always -B 1 -A 1'
alias rga='rga --color always --heading'
alias meta5='wine /home/peter/.wine/drive_c/Program\ Files/MetaTrader\ 5/terminal64.exe'
alias note='cd /home/peter/notes && nvim index.md'
alias ,='devour'
alias space='emacs -q --load ~/.emacs.d/init.el'
alias doom='emacs'
alias doc='~/documents/'
alias docs='~/documents/'
alias vid='~/videos/'
alias vids='~/videos/'
alias dow='~/downloads/'
alias down='~/downloads/'
alias not='~/notes/'
alias dot='~/dot-files/'
alias dots='~/dot-files/'
alias con='~/.config/'
alias conf='~/.config/'
